version: 2
jobs:
  build:
    working_directory: ~/circleci
    docker:
      - image: circleci/python:3.8.0-buster
    steps:
      - run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - checkout
      - restore_cache:
          key: pip-v1-{{ checksum "poetry.lock" }}
      - run:
          command:
            poetry install -v
      - save_cache:
          key: pip-v1-{{ checksum "poetry.lock" }}
          paths:
            - "/home/circleci/.cache/pypoetry/virtualenvs"
      - run:
          command:
            poetry run scenographer --help
      - run:
          command:
            poetry run scenographer empty-config
      - run:
          command:
            poetry run black --check .
      - run:
          command:
            poetry run isort --check-only .
      - run:
          command:
            poetry run flake8 .
      - run:
          command:
            poetry run pylint scenographer
      - run:
          name: "Check if documentation is up-to-date."
          command: |
            poetry run pdoc --force --html --output-dir tmpdocs scenographer
            diff tmpdocs/scenographer docs/ -r


  deployment:
    docker:
      - image: circleci/python:3.8.0-buster
    steps:
      - checkout
      - run:
          command: |
            poetry publish --build --username "${PUBLIC_PYPI_USERNAME}" --password "${PUBLIC_PYPI_PASSWORD}" --no-interaction


workflows:
  version: 2
  build-workflow:
    jobs:
      - build

  deployment-workflow:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - deployment:
          requires:
            - build
          filters:
              tags:
                only: /^v.*/
              branches:
                ignore: /.*/
